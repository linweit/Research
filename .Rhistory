logitA('KRAS')
outE=data.frame();
for (xs in names(select(mutB,-PatientID) ) ) {
outE=rbind(outE, logitA(x=xs))
outE
}
logitB=function(x){
mylogit=glm(formula(paste0('factor(',x,')~bap+smoking+sex')),data=caseH,family='binomial')
#   caseG=mutate(caseF,y=as.factor(as.numeric(ifelse(x=='',0,1))) )
#   mylogit=glm(as.formula(paste0('y~bap+smoking+sex')),data=caseG,family='binomial')
summ=summary(mylogit)
summA=as.data.frame(summ$coefficients)
summA$gene=as.factor(x)
summB=summA[2,]
rownames(summB)=NULL
summB
}
outE=data.frame();
for (xs in names(select(mutB,-PatientID) ) ) {
outE=rbind(outE, logitB(x=xs))
outE
}
#' 以下结果：用BAP暴露量来解释基因突变：有控制吸烟和性别
outE
outF=outE
names(outF)=c('beta','se','z','pValue','gene')
outG=filter(outF,pValue<0.1)
outG
outH=arrange(outG,pValue)
outH
outH$gene
list(outH$gene)
c(outH$gene)
str(outH$gene)
as.character(outH$gene)
head(caseH)
caseI=melt(caseH,id='bap')
caseI=select(caseH,c(bap,as.character(outH$gene)))
caseJ=melt(caseH,id='bap')
head(caseJ)
caseI=select(caseH,c(bap,as.character(outH$gene)))
caseJ=melt(caseH,id='bap')
list(as.character(outH$gene)))
list(as.character(outH$gene))))
list(as.character(outH$gene))
caseI=select(caseH,c(bap,list(as.character(outH$gene))))
outH$gene
as.vector(outH$gene)
caseI=select(caseH,c(bap,as.vector(outH$gene) ))
caseI=select(caseH,bap,as.vector(outH$gene) )
head(caseH)
head(caseJ)
head(caseI)
caseI=select(caseH,c(bap,as.vector(outH$gene) ))
caseI=select(caseH,c(bap,unlist(outH$gene) ))
head(caseI)
outH$gene
caseI=select(caseH,c(bap,unlist(outH$gene) ))
names(caseI)
outE$gene
outF=outE
names(outF)=c('beta','se','z','pValue','gene')
outG=filter(outF,pValue<0.1)
outH=arrange(outG,pValue)
outH
caseI=select(caseH,c(bap,unlist(outG$gene) ))
head(caseI,1)
outG=filter(outF,pValue<0.1)
caseI=select(caseH,c(bap,unlist(outG$gene) ))
names(caseI)
outF=outE
names(outF)=c('beta','se','z','pValue','gene')
outG=filter(outF,pValue<0.1)
outG
outG$gene)
outG$gene
caseI=select(caseH,c(bap,unlist(outG$gene) ))
names(caseI)
caseI=select(caseH,c(unlist(outG$gene) ))
names(caseI)
unlist(outG$gene)
outG$gene
caseI=select(caseH,c(unlist(outG$gene) ))
names(caseI)
str(unlist(outG$gene))
caseI=select(caseH,as.character(unlist(outG$gene) )))
caseI=select(caseH,as.character(unlist(outG$gene) ))
caseI=select(caseH,unlist(as.character(outG$gene) ))
caseI=select(caseH,as.vector(unlist(outG$gene) ))
outG$gene = as.character(outG$gene)
caseI=select(caseH,unlist(outG$gene) )
unlist(outG$gene)
str(unlist(outG$gene))
caseI=subset(caseH,names(caseH) %in% unlist(outG$gene) )
names(caseI)
outG$gene = as.vector(outG$gene)
outG$gene
caseI=subset(caseH,outG$gene )
caseI=select(caseH,outG$gene )
caseI=subset(caseH,select=outG$gene )
names(caseI)
caseI=subset(caseH,select=c(bap,outG$gene) )
caseI=subset(caseH,select=c('bap',outG$gene) )
names(caseI)
caseJ=melt(caseI,id='bap')
head(caseJ)
head(caseJ,100)
str(caseJ)
caseK=mutate(caseJ,value=ifelse(value=='0',0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
genePanel
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free') +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
genePanel
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=4) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
#+ fig.width=6
genePanel
ggsave(genePanel,file='genePanel.png',width=5,height=20)
ggsave(genePanel,file='genePanel.png',width=5,height=25)
setwd("/repo/noAsthma")
system("pandoc -s --self-contained --css=stylesLinwei.css noAsthma.md -o out/noAsthma.html")
setwd("/repo/noAsthma")
system("pandoc -s --self-contained --css=stylesLinwei.css noAsthma.md -o out/noAsthma.html")
#+ setup, include=FALSE
require(knitr)
opts_chunk$set(warning=FALSE,message=FALSE)
#+ options, include=FALSE
options(width=80)
options(stringsAsFactors=FALSE)
options(scipen = 6) # bias against scientific notation
options(digits = 3) # show fewer decimal places
#+ packages
packages=c('reshape2','dplyr','ggplot2','knitr','lubridate','openair','data.table')
lapply(packages, require, character.only=T)
#+ data cleaning, include=FALSE
caseA=read.csv('doc/ZhouGBdata164RAW2.csv')
nonYunnanFuel=read.csv('doc/nonYunnanFuel.csv')
mutate164=read.csv('doc/mutate164.csv')
case34=filter(caseA,residence %in% c(3,4));
case34A=select(case34,-coalmine)
nonA=mutate(nonYunnanFuel,tumorID=as.character(tumorID)) ;
str(nonA)
case34B=merge(case34A,nonA,by='tumorID')
case12=filter(caseA,residence %in% c(1,2));
case1234=rbind(case12,case34B)
caseB=select(case1234,-c(name,tumorID,normalID,smokingRaw,address,hospital))
str(caseB)
caseC=filter(caseB,sex %in% c('M','FM') )
dim(caseC)
#' here we removed two cases without Sex and Age information; so the total number of subjects is really 162.
#'
temp=filter(caseC,is.na(coalmine) )
caseD=mutate(caseC,sex=ifelse(sex=='M','Male',ifelse(sex=='FM','Female',NA)),
residenceA=ifelse(residence %in% c(1,2),'HPR','CR'),
IndoorTime=ifelse(sex==1,12,16),
age=as.numeric(age),
smoking=ifelse(smoking=='YES','Smoker',ifelse(smoking=='NO','Non-smoker',NA) ),
smokingYear=ifelse(is.na(smokingYear),0,smokingYear),
smokingPack=ifelse(is.na(smokingPack),0,smokingPack),
quitYear=ifelse(is.na(quitYear),0,quitYear) )
# coalmine=ifelse(residence %in% c(1,2),coalmine,
#                              ifelse(residence == 3, 'Yunnan','Guangdong')
bapKirkA=read.csv('doc/bapKirk.csv')
# bapKirkB=mutate(bapKirkA,IndoorBaP=ifelse(coalmine=='Yunnan', 286.2,
#                                           ifelse(coalmine=='Guangdong', 119, IndoorBaP)),
#                 OutdoorBaP=ifelse(coalmine=='Yunnan', 15.4,
#                                           ifelse(coalmine=='Guangdong', 13, OutdoorBaP)))
caseE=left_join(caseD,bapKirkA,by='coalmine')
caseF=mutate(caseE,bapFuel=(age-10)*365.25*(14/24*IndoorBaP+10/24*OutdoorBaP)*20/10^6,
bapSmoking=ifelse(smoking=='Non-smoker',0, (smokingYear-10)*365.25*smokingPack*400/10^6),
bap=bapFuel+bapSmoking)
xtabs(~residenceA + TP53, data = caseF)
require(grid)
bapBar=ggplot(caseF, aes(factor(residenceA),bap))+geom_boxplot(aes(fill = factor(smoking)))+facet_grid(~sex)+guides(fill=guide_legend(title=NULL))+theme(legend.position=c(0,1),legend.justification=c(0.06,0.9))+xlab('Region')+ylab('BaP Exposure (mg)')+theme(legend.key.height=unit(1,"line"))+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
# ggsave(bapBar,file='bapBar.png',width=5, height=4,dpi=300)
dim(mutate164)
mutA=unique(mutate164)
# mutA=mutate164
dim(mutA)
mutB=dcast(mutA,PatientID~Gene,length); table(mutB$TP53)
mutB=dcast(mutA,PatientID~Gene); table(mutB$TP53)
dim(mutB)
caseG=select(caseF,-c(TP53:C2CD3))
setwd("C:/repo/xwZhouGB")
#+ setup, include=FALSE
require(knitr)
opts_chunk$set(warning=FALSE,message=FALSE)
#+ options, include=FALSE
options(width=80)
options(stringsAsFactors=FALSE)
options(scipen = 6) # bias against scientific notation
options(digits = 3) # show fewer decimal places
#+ packages
packages=c('reshape2','dplyr','ggplot2','knitr','lubridate','openair','data.table')
lapply(packages, require, character.only=T)
#+ data cleaning, include=FALSE
caseA=read.csv('doc/ZhouGBdata164RAW2.csv')
nonYunnanFuel=read.csv('doc/nonYunnanFuel.csv')
mutate164=read.csv('doc/mutate164.csv')
case34=filter(caseA,residence %in% c(3,4));
case34A=select(case34,-coalmine)
nonA=mutate(nonYunnanFuel,tumorID=as.character(tumorID)) ;
str(nonA)
case34B=merge(case34A,nonA,by='tumorID')
case12=filter(caseA,residence %in% c(1,2));
case1234=rbind(case12,case34B)
caseB=select(case1234,-c(name,tumorID,normalID,smokingRaw,address,hospital))
str(caseB)
caseC=filter(caseB,sex %in% c('M','FM') )
dim(caseC)
#' here we removed two cases without Sex and Age information; so the total number of subjects is really 162.
#'
temp=filter(caseC,is.na(coalmine) )
caseD=mutate(caseC,sex=ifelse(sex=='M','Male',ifelse(sex=='FM','Female',NA)),
residenceA=ifelse(residence %in% c(1,2),'HPR','CR'),
IndoorTime=ifelse(sex==1,12,16),
age=as.numeric(age),
smoking=ifelse(smoking=='YES','Smoker',ifelse(smoking=='NO','Non-smoker',NA) ),
smokingYear=ifelse(is.na(smokingYear),0,smokingYear),
smokingPack=ifelse(is.na(smokingPack),0,smokingPack),
quitYear=ifelse(is.na(quitYear),0,quitYear) )
# coalmine=ifelse(residence %in% c(1,2),coalmine,
#                              ifelse(residence == 3, 'Yunnan','Guangdong')
bapKirkA=read.csv('doc/bapKirk.csv')
# bapKirkB=mutate(bapKirkA,IndoorBaP=ifelse(coalmine=='Yunnan', 286.2,
#                                           ifelse(coalmine=='Guangdong', 119, IndoorBaP)),
#                 OutdoorBaP=ifelse(coalmine=='Yunnan', 15.4,
#                                           ifelse(coalmine=='Guangdong', 13, OutdoorBaP)))
caseE=left_join(caseD,bapKirkA,by='coalmine')
caseF=mutate(caseE,bapFuel=(age-10)*365.25*(14/24*IndoorBaP+10/24*OutdoorBaP)*20/10^6,
bapSmoking=ifelse(smoking=='Non-smoker',0, (smokingYear-10)*365.25*smokingPack*400/10^6),
bap=bapFuel+bapSmoking)
xtabs(~residenceA + TP53, data = caseF)
require(grid)
bapBar=ggplot(caseF, aes(factor(residenceA),bap))+geom_boxplot(aes(fill = factor(smoking)))+facet_grid(~sex)+guides(fill=guide_legend(title=NULL))+theme(legend.position=c(0,1),legend.justification=c(0.06,0.9))+xlab('Region')+ylab('BaP Exposure (mg)')+theme(legend.key.height=unit(1,"line"))+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
# ggsave(bapBar,file='bapBar.png',width=5, height=4,dpi=300)
dim(mutate164)
mutA=unique(mutate164)
# mutA=mutate164
dim(mutA)
mutB=dcast(mutA,PatientID~Gene,length); table(mutB$TP53)
mutB=dcast(mutA,PatientID~Gene); table(mutB$TP53)
dim(mutB)
caseG=select(caseF,-c(TP53:C2CD3))
caseG=select(caseF,-c(TP53:KRAS))
caseH=left_join(caseG,mutB,by='PatientID')
head(caseH)
caseH[is.na(caseH)]=0
head(caseH)
str(caseH)
caseG=select(caseF,-c(TP53:KRAS, ANK2,CHRNA4))
caseG=select(caseF,-c(TP53,EGFR,KRAS, ANK2,CHRNA4))
caseH=left_join(caseG,mutB,by='PatientID')
dim(caseH)
caseH[is.na(caseH)]=0
logitB=function(x){
mylogit=glm(formula(paste0('factor(',x,')~bap+smoking+sex')),data=caseH,family='binomial')
#   caseG=mutate(caseF,y=as.factor(as.numeric(ifelse(x=='',0,1))) )
#   mylogit=glm(as.formula(paste0('y~bap+smoking+sex')),data=caseG,family='binomial')
summ=summary(mylogit)
summA=as.data.frame(summ$coefficients)
summA$gene=as.factor(x)
summB=summA[2,]
rownames(summB)=NULL
summB
}
outE=data.frame();
for (xs in names(select(mutB,-PatientID) ) ) {
outE=rbind(outE, logitB(x=xs))
outE
}
outF=outE
names(outF)=c('beta','se','z','pValue','gene')
outG=filter(outF,pValue<0.1)
sigTable= xtable(outG)
library(xtable)
sigTable= xtable(outG)
print(sigTable,floating=FALSE)
knit('bapDoseforCasesB.r')
spin('bapDoseforCasesB.r')
system('pandoc bapDoseforCasesB.md -o bapDoseforCasesBbb.docx')
outG
setwd("C:/repo/xwZhouGB")
system('pandoc bapDoseforCasesTable.md -o bapDoseforCasesTable.docx')
system('pandoc bapDoseforCasesTable.md -o bapDoseforCasesTable.html')
system('pandoc bapDoseforCasesTable.md -o bapDoseforCasesTable.docx')
outH=arrange(outG,pValue)
outH
system('pandoc bapDoseforCasesTable.md -o bapDoseforCasesTable.docx')
outGb=filter(outF,pValue>=0.1)
outGb
names(caseF)
geneList=c(names(select(mutB,-PatientID) ), "ARID1A",      "RYR2"   ,     "RYR1",
"CACNA1E"  ,   "XIRP2" ,      "ANK2"   ,     "CHRNA4" ,     "PRKCE"  ,     "C2CD3")
geneList
outE=data.frame();
for (xs in geneList ) {
outE=rbind(outE, logitB(x=xs))
outE
}
#' 以下结果：用BAP暴露量来解释基因突变：有控制吸烟和性别
#' 所有基因的计算结果
#'
outE
geneList=c(names(select(mutB,-PatientID) ), "ARID1A",      "RYR2"   ,     "RYR1",
"CACNA1E"  ,   "XIRP2" ,      "PRKCE"  ,     "C2CD3")
outE=data.frame();
for (xs in geneList ) {
outE=rbind(outE, logitB(x=xs))
outE
}
#' 以下结果：用BAP暴露量来解释基因突变：有控制吸烟和性别
#' 所有基因的计算结果
#'
outE
outF=outE
names(outF)=c('beta','se','z','pValue','gene')
outG=filter(outF,pValue<0.1)
outG
outGb=filter(outF,pValue>=0.1)
outGb
outH=arrange(outG,pValue)
outH
system('pandoc bapDoseforCasesTable.md -o bapDoseforCasesTable.docx')
outG70=filter(outF,pValue<0.05)
outG70List = as.vector(outG70$gene)
outG70List
caseI=subset(caseH,select=c('bap',outG70List) )
names(caseI)
caseJ=melt(caseI,id='bap')
caseK=mutate(caseJ,value=ifelse(value=='0',0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free') +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=7) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanel.png',width=7,height=10)
caseK=mutate(caseJ,value=ifelse(value %in% c('0',''),0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanel.png',width=7,height=20)
outG70List
outG70List = sort(as.vector(outG70$gene))
outG70List
caseI=subset(caseH,select=c('bap',outG70List) )
names(caseI)
caseJ=melt(caseI,id='bap')
caseK=mutate(caseJ,value=ifelse(value %in% c('0',''),0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value, color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanel.png',width=8,height=20)
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanel.png',width=8,height=20)
outG70p=arrange(outG70,pValue)
outG70List = as.vector(outG70$gene)
ggsave(genePanel,file='genePanelByNames.png',width=8,height=20)
outG70List = as.vector(outG70$gene)
outG70List
caseI=subset(caseH,select=c('bap',outG70List) )
names(caseI)
caseJ=melt(caseI,id='bap')
caseK=mutate(caseJ,value=ifelse(value %in% c('0',''),0,1))
caseI=subset(caseH,select=c('bap','pValue',outG70List) )
names(caseH)
head(caseJ)
outG70p
outG70p$variable=outG70p$gene
caseJ2=left_join(caseJ,outG70p,by='variable')
caseJ3=arrange(caseJ2,pValue)
caseK=mutate(caseJ,value=ifelse(value %in% c('0',''),0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanelByPvalue.png',width=8,height=20)
caseK=mutate(caseJ3,value=ifelse(value %in% c('0',''),0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanelByPvalue.png',width=8,height=20)
head(caseK)
outG70List
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~reorder(variable,by=pValue),scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanelByPvalue.png',width=8,height=20)
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~reorder(variable,pValue),scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanelByPvalue.png',width=8,height=20)
caseKk=mutate(caseK,variable=reorder(variable,pValue) )
genePanel=ggplot(caseKk, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(genePanel,file='genePanelByPvalue.png',width=8,height=20)
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()+geom_jitter()
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()+geom_jitter()+stat_summary(fun.y="median", geom="point")
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()+geom_jitter()+stat_summary(fun.y="median", geom="line")
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()+geom_jitter()+stat_summary(fun.y="median", geom_line)
ggplot(caseH, aes(factor(residenceA),bap))+geom_violin()+geom_jitter()+stat_summary(fun.y="median", geom="point",size=3,color='red')
ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter()+stat_summary(fun.y="median", geom="point",size=3,color='red')
ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter()+stat_summary(fun.y="median", geom="point",size=3,color='red')+xlab('Region')+ylab('BaP Exposure (mg)')
ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter()+stat_summary(fun.y="median", geom="point",size=3,color='red')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter()+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion',width=4,height=5)
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(color='gray',size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(color='gray10',size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot(color='gray')+geom_jitter(size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot(color='gray')+geom_jitter(shape=residenceA,size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot(color='gray')+geom_jitter(aes(shape=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA),size=2,color='gray30')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme(legend.position='none')
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA),size=2,color='gray30')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme(legend.position='none')+geom_theme('classic')
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA),size=2,color='gray30')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme(legend.position='none')+theme_classic(base_size = 12, base_family = "")
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA),size=2,color='gray30')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot(color='red')+geom_jitter(aes(shape=residenceA),size=2,color='gray30')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA),size=2,color='gray50')+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
tapply(caseH$bap, caseH$residenceA, summary)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_fill_manual(values=c('green','red'))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
tapply(caseH$bap, caseH$residenceA, summary)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_fill_manual(values=c('green','yellow'))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_color_manual(values=c('green','yellow'))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_color_manual(values=c('green','red'))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_color_manual(values=c('green','red'))+scale_y_continuous(breaks=seq(0, 350, 50))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
outG70=filter(outF,pValue<0.05)
outG70List = sort(as.vector(outG70$gene))
caseI=subset(caseH,select=c('bap',outG70List) )
names(caseI)
caseJ=melt(caseI,id='bap')
caseK=mutate(caseJ,value=ifelse(value %in% c('0',''),0,1))
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none")+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic()
ggsave(genePanel,file='genePanelByNames.png',width=8,height=20)
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +theme(legend.position="none",strip.background =  element_blank())+xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic()
ggsave(genePanel,file='genePanelByNames.png',width=8,height=20)
genePanel=ggplot(caseK, aes(x=bap, y=value)) + stat_smooth(method="glm", family="binomial", se=TRUE)+facet_wrap(~variable,scales='free',ncol=5) +xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic()+theme(legend.position="none",strip.background =  element_blank())
ggsave(genePanel,file='genePanelByNames.png',width=8,height=20)
genePanel=ggplot(caseK, aes(x=bap, y=value,color=variable)) + stat_smooth(method="glm", family="binomial", se=TRUE,aes(fill=variable) )+facet_wrap(~variable,scales='free',ncol=5) +xlab('BaP Exposure (mg)')+ylab('Mutation Probability')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic()+theme(legend.position="none",strip.background =  element_blank())
ggsave(genePanel,file='genePanelByNames.png',width=8,height=20)
outG70p=arrange(outG70,pValue)
outG70List = as.vector(outG70$gene)
caseI=subset(caseH,select=c('bap','pValue',outG70List) )
names(caseI)
caseJ=melt(caseI,id='bap')
outG70p$variable=outG70p$gene
caseJ2=left_join(caseJ,outG70p,by='variable')
caseJ3=arrange(caseJ2,pValue)
caseK=mutate(caseJ3,value=ifelse(value %in% c('0',''),0,1))
caseKk=mutate(caseK,variable=reorder(variable,pValue) )
genePanelByPvalue=genePanel %+% caseKk
ggsave(genePanelByPvalue,file='genePanelByPvalue.png',width=8,height=20)
bapBar=ggplot(caseH, aes(factor(residenceA),bap))+geom_boxplot()+geom_jitter(aes(shape=residenceA,color=residenceA),size=2)+xlab('Region')+ylab('BaP Exposure (mg)')+theme(axis.title.x = element_text(vjust=-0.5),axis.title.y = element_text(vjust=0.3))+theme_classic(base_size = 12, base_family = "")+theme(legend.position='none')+scale_color_manual(values=c('blue','red'))+scale_y_continuous(breaks=seq(0, 350, 50))
ggsave(bapBar,file='bapBarRegion.png',width=4,height=5)
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
setwd("C:/repo/teach")
system('pandoc --mathjax ehA2riskA.md -o 6912/ehA2riskA.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
system('pandoc ehA2riskA.md -o 6912/ehA2riskA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2')
system('pandoc -s -m --self-contained BaPparagraphB.md -o BaPparagraphB.docx')
setwd("C:/repo/xwZhouGB")
system('pandoc -s -m --self-contained BaPparagraphB.md -o BaPparagraphB.docx')
tosmall('Greater Temperature Variation within a Day Associated with Increased Emergency Hospital Admissions for Asthma')
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("C:/repo/grants/grf14")
setwd("/repo/grants/grf14")
system("pandoc -s --self-contained --css=stylesLinwei.css grf14cpm.md -o out/grf14cpm.html")
system("pandoc -s --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
setwd("/repo/grants/grf14")
system("pandoc -s --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
setwd("/repo/grants/grf14")
system("pandoc -s --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
system("pandoc -s -m --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
system("pandoc -s -m  grf14cpm.md -o grf14cpm.pdf")
system("pandoc -s -m  grf14cpm.md -o grf14cpm.pdf --latex-engine=xelatex")
system("pandoc -s -m --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
system("pandoc -s -m  grf14cpm.md -o grf14cpm.pdf --latex-engine=xelatex")
system("pandoc -s -m --self-contained --css=stylesLinwei.css grf14cpm.md -o grf14cpm.html")
setwd("C:/repo/teach")
system('pandoc ehA3naturalA.md -o 6912/ehA3naturalA.html --self-contained -i -t dzslides --css=dzslides.css --slide-level=2 ')
system('pandoc ehA3naturalAa.md -o 6912/ehA3naturalAa.pdf -t beamer --slide-level=2 --template PandocBeamerSlides.tex')
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
setwd("/repo/Research")
system("pandoc -s --self-contained --css=stylesLinwei.css index.md -o index.html")
